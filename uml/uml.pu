@startuml NodeProcessing

class NodeGui {
    +init(): bool
    +loop(): void
    +abort(): void
    +quit(): void

    +createWindow(): void
    +createRenderer(): void
    +setupImGui(): void

    -m_win_width: int32_t
    -m_win_height: int32_t

    -m_win: SDL_Window*
    -m_gl_context: SDL_GLContext
    -m_renderer: SDL_Renderer*

    -m_imgui_context: ImGuiContext*
    -m_imnodes_context: ImNodesContext*

    -m_bg_color: ImVec4

    -m_menu_bar: MenuBar*

    -m_node_manager: NodeManager*
    -m_pin_manager: PinManager*
}

class MenuBar {
    +m_menu_items: std::vector<MenuItem>
}

abstract class MenuItem {

}

class MenuItem_File {

}

class MenuItem_ImageVideo {

}

class MenuItem_Audio {

}

class NodeManager {
    +addNode(Node* node): void
    +deleteNode(): void

    +m_used_id: std::vector<uint32_t>
    -m_node_list: std::vector<Node*>
}

abstract class Node {
    +m_id: uint32_t

    +m_in_pins: std::vector<Pin>
    +m_out_pins: std::vector<Pin>
}

abstract class MediaNode {

}

class ImageNode {

}

class VideoNode {

}

class PinManager {
    +m_used_id: std::vector<uint32_t>
}

class Pin {
    +m_id: uint32_t
    +m_name: const char*

    +m_connected_nodes: std::vector<Node*>
}

NodeGui *-- NodeManager
NodeGui *-- PinManager
NodeGui *-- MenuBar

MenuBar --> MenuItem
MenuItem <|-- MenuItem_File
MenuItem <|-- MenuItem_ImageVideo
MenuItem <|-- MenuItem_Audio

Node <|-- MediaNode
MediaNode <|-- ImageNode
MediaNode <|-- VideoNode

NodeManager --> Node
PinManager <-- Pin
Node <--> Pin

@enduml
